-- CreateTable
CREATE TABLE GAME (
    ID NUMBER(10) NOT NULL,
    SLUG VARCHAR2(255) NOT NULL,
    NAME VARCHAR2(255) NOT NULL,
    RELEASED VARCHAR2(255) NOT NULL,
    TBA NUMBER(1) NOT NULL,
    BACKGROUND_IMAGE VARCHAR2(255) NOT NULL,
    RATING NUMBER(10,2) NOT NULL,
    RATING_TOP NUMBER(10) NOT NULL,
    RATINGS_COUNT NUMBER(10) NOT NULL,
    ADDED_COUNT NUMBER(10) NOT NULL,
    METACRITIC NUMBER(10),
    PLAYTIME NUMBER(10) NOT NULL,
    SUGGESTIONS_COUNT NUMBER(10) NOT NULL,
    UPDATED VARCHAR2(255) NOT NULL,
    REVIEWS_COUNT NUMBER(10) NOT NULL,
    DESCRIPTION VARCHAR2(4000),
    CLIPS VARCHAR2(255) NOT NULL,
    PUBLISHERID NUMBER(10),

    CONSTRAINT GAME_PKEY PRIMARY KEY (ID)
);

-- CreateTable
CREATE TABLE PUBLISHER (
    ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    NAME VARCHAR2(255) NOT NULL,
    SINCE VARCHAR2(255) NOT NULL,
    IMAGE VARCHAR2(255),
    GAMES_COUNT NUMBER NOT NULL,
    DESCRIPTION VARCHAR2(3000),

    CONSTRAINT PUBLISHER_PKEY PRIMARY KEY (ID)
);

-- CreateTable
CREATE TABLE PERSON (
    ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    NAME VARCHAR2(255) NOT NULL,
    EMAIL VARCHAR2(255) NOT NULL,
    PASSWORD VARCHAR2(255) NOT NULL,
    JOINED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PROFILE_PICTURE VARCHAR2(255),
    BIO VARCHAR2(1000),
    SOCIALMEDIA_LINK VARCHAR2(255) NOT NULL,

    CONSTRAINT PERSON_PKEY PRIMARY KEY (ID)
);

-- CreateTable
CREATE TABLE RATING_LEVEL (
    ID NUMBER NOT NULL,
    TITLE VARCHAR2(255) NOT NULL,

    CONSTRAINT RATING_LEVEL_PKEY PRIMARY KEY (ID)
);

-- CreateTable
CREATE TABLE GAME_RATING (
    COUNT NUMBER NOT NULL,
    PERCENT NUMBER(10,2) NOT NULL,
    GAMEID NUMBER NOT NULL,
    RATINGID NUMBER NOT NULL,

    CONSTRAINT GAME_RATING_PKEY PRIMARY KEY (GAMEID, RATINGID)
);

-- CreateTable
CREATE TABLE ADDED_BY_STATUS (
    ID NUMBER(10) GENERATED BY DEFAULT ON NULL AS IDENTITY,
    YET NUMBER NOT NULL,
    OWNED NUMBER NOT NULL,
    BEATEN NUMBER NOT NULL,
    TOPLAY NUMBER NOT NULL,
    DROPPED NUMBER NOT NULL,
    PLAYING NUMBER NOT NULL,
    GAMEID NUMBER NOT NULL,

    CONSTRAINT ADDED_BY_STATUS_PKEY PRIMARY KEY (ID)
);

-- CreateTable
CREATE TABLE PLATFORM (
    ID NUMBER NOT NULL,
    NAME VARCHAR2(255) NOT NULL,
    SLUG VARCHAR2(255) NOT NULL,
    YEAR_END NUMBER,
    YEAR_START NUMBER,
    GAMES_COUNT NUMBER NOT NULL,
    IMAGE_BACKGROUND VARCHAR2(500) NOT NULL,

    CONSTRAINT PLATFORM_PKEY PRIMARY KEY (ID)
);

-- CreateTable
CREATE TABLE PLATFORM_ON_GAMES (
    MINIMUM_REQUIREMENTS VARCHAR2(1000),
    RECOMMENDED_REQUIREMENTS VARCHAR2(1000),
    GAMEID NUMBER NOT NULL,
    PLATFORMID NUMBER NOT NULL,

    CONSTRAINT PLATFORM_ON_GAMES_PKEY PRIMARY KEY (GAMEID, PLATFORMID)
);

-- CreateTable
CREATE TABLE PARENT_PLATFORM (
    ID NUMBER NOT NULL,
    NAME VARCHAR2(255) NOT NULL,
    SLUG VARCHAR2(255) NOT NULL,

    CONSTRAINT PARENT_PLATFORM_PKEY PRIMARY KEY (ID)
);

-- CreateTable
CREATE TABLE GENRE (
    ID NUMBER NOT NULL,
    NAME VARCHAR2(255) NOT NULL,
    SLUG VARCHAR2(255) NOT NULL,
    GAMES_COUNT NUMBER NOT NULL,
    IMAGE_BACKGROUND VARCHAR2(500) NOT NULL,

    CONSTRAINT GENRE_PKEY PRIMARY KEY (ID)
);

-- CreateTable
CREATE TABLE STORE (
    ID NUMBER(10) NOT NULL,
    NAME VARCHAR2(255) NOT NULL,
    SLUG VARCHAR2(255) NOT NULL,
    DOMAIN VARCHAR2(255) NOT NULL,
    GAMES_COUNT INTEGER NOT NULL,
    IMAGE_BACKGROUND VARCHAR2(500) NOT NULL,

    CONSTRAINT STORE_PKEY PRIMARY KEY (ID)
);

-- CreateTable
CREATE TABLE TAG (
    ID INTEGER NOT NULL,
    NAME VARCHAR2(255) NOT NULL,
    SLUG VARCHAR2(255) NOT NULL,
    LANGUAGE VARCHAR2(255) NOT NULL,
    GAMES_COUNT INTEGER NOT NULL,
    IMAGE_BACKGROUND VARCHAR2(500) NOT NULL,

    CONSTRAINT TAG_PKEY PRIMARY KEY (ID)
);

-- CreateTable
CREATE TABLE ESRB_RATING (
    ID INTEGER NOT NULL,
    NAME VARCHAR2(255) NOT NULL,
    SLUG VARCHAR2(255) NOT NULL,

    CONSTRAINT ESRB_RATING_PKEY PRIMARY KEY (ID)
);

-- CreateTable
CREATE TABLE SHORT_SCREENSHOT (
    ID INTEGER NOT NULL,
    IMAGE VARCHAR2(255) NOT NULL,
    GAMEID INTEGER NOT NULL,

    CONSTRAINT SHORT_SCREENSHOT_PKEY PRIMARY KEY (ID)
);

-- CreateTable
CREATE TABLE REVIEWS (
    GAMEID INTEGER NOT NULL,
    PERSONID INTEGER NOT NULL,
    RATING NUMBER NOT NULL,
    REVIEW_TEXT VARCHAR2(500) NOT NULL,

    CONSTRAINT REVIEWS_PKEY PRIMARY KEY (GAMEID, PERSONID)
);

-- CreateTable
CREATE TABLE COLLECTION (
    PERSONID INTEGER NOT NULL,
    GAMEID INTEGER NOT NULL,

    CONSTRAINT COLLECTION_PKEY PRIMARY KEY (PERSONID, GAMEID)
);

-- CreateTable
CREATE TABLE WISHLIST (
    PERSONID INTEGER NOT NULL,
    GAMEID INTEGER NOT NULL,

    CONSTRAINT WISHLIST_PKEY PRIMARY KEY (PERSONID, GAMEID)
);

-- CreateTable
CREATE TABLE NEWS (
    ID INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    TITLE VARCHAR2(255) NOT NULL,
    IMAGE VARCHAR2(255),
    AUTHOR VARCHAR2(255) NOT NULL,
    DESCRIPTION VARCHAR2(4000) NOT NULL,
    DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    LIKES_COUNT INTEGER NOT NULL,
    COMMENTS_COUNT INTEGER NOT NULL,
    GAMEID INTEGER NOT NULL,

    CONSTRAINT NEWS_PKEY PRIMARY KEY (ID)
);

-- CreateTable
CREATE TABLE COMMENTS (
    COMMENT VARCHAR2(1000) NOT NULL,
    LIKES NUMBER(1) NOT NULL,
    DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    PERSONID INTEGER NOT NULL,
    NEWSID INTEGER NOT NULL,

    CONSTRAINT COMMENTS_PKEY PRIMARY KEY (PERSONID, NEWSID)
);

-- CreateTable
CREATE TABLE EVENTS (
    ID INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    TITLE VARCHAR2(255) NOT NULL,
    IMAGE VARCHAR2(255),
    DESCRIPTION VARCHAR2(4000) NOT NULL,
    DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    ORGANIZER VARCHAR2(255) NOT NULL,
    LIKES_COUNT INTEGER NOT NULL,
    COMMENTS_COUNT INTEGER NOT NULL,
    GAMEID INTEGER NOT NULL,

    CONSTRAINT EVENTS_PKEY PRIMARY KEY (ID)
);

-- CreateTable
CREATE TABLE PARTICIPATION (
    DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    COMMENT VARCHAR2(1000) NOT NULL,
    LIKES NUMBER(1) NOT NULL,
    PERSONID INTEGER NOT NULL,
    EVENTID INTEGER NOT NULL,

    CONSTRAINT PARTICIPATION_PKEY PRIMARY KEY (PERSONID, EVENTID)
);

-- CreateTable
CREATE TABLE "GAME_PARENTPLATFORM" (
    GAMEID INTEGER NOT NULL,
    PARENTPLATFORM_ID INTEGER NOT NULL
);

-- CreateTable
CREATE TABLE "GAME_GENRE" (
    GAMEID INTEGER NOT NULL,
    GENRE_ID INTEGER NOT NULL
);

-- CreateTable
CREATE TABLE "GAME_STORE" (
    GAMEID INTEGER NOT NULL,
    STORE_ID INTEGER NOT NULL
);

-- CreateTable
CREATE TABLE "GAME_TAG" (
    GAMEID INTEGER NOT NULL,
    TAG_ID INTEGER NOT NULL
);

-- CreateTable
CREATE TABLE "ESRBRATING_GAME" (
    ESRBRATING_ID INTEGER NOT NULL,
    GAMEID INTEGER NOT NULL
);

-- CreateIndex
CREATE UNIQUE INDEX GAME_SLUG_NAME_KEY ON GAME(SLUG, NAME);

-- CreateIndex
CREATE UNIQUE INDEX PUBLISHER_NAME_KEY ON PUBLISHER(NAME);

-- CreateIndex
CREATE UNIQUE INDEX PERSON_EMAIL_KEY ON PERSON(EMAIL);

-- CreateIndex
CREATE UNIQUE INDEX RATING_LEVEL_TITLE_KEY ON RATING_LEVEL(TITLE);

-- CreateIndex
CREATE UNIQUE INDEX ADDED_BY_STATUS_GAMEID_KEY ON ADDED_BY_STATUS(GAMEID);

-- CreateIndex
CREATE UNIQUE INDEX PLATFORM_SLUG_KEY ON PLATFORM(SLUG);

CREATE UNIQUE INDEX PARENT_PLATFORM_SLUG_KEY ON PARENT_PLATFORM(SLUG);

-- CreateIndex
CREATE UNIQUE INDEX GENRE_SLUG_KEY ON GENRE(SLUG);

-- CreateIndex
CREATE UNIQUE INDEX STORE_SLUG_KEY ON STORE(SLUG);

-- CreateIndex
CREATE UNIQUE INDEX TAG_SLUG_KEY ON TAG(SLUG);

-- CreateIndex
CREATE UNIQUE INDEX ESRB_RATING_SLUG_KEY ON ESRB_RATING(SLUG);

-- CreateIndex
CREATE UNIQUE INDEX SHORT_SCREENSHOT_IMAGE_KEY ON SHORT_SCREENSHOT(IMAGE);

-- CreateIndex
CREATE UNIQUE INDEX NEWS_TITLE_KEY ON NEWS(TITLE);

-- CreateIndex
CREATE UNIQUE INDEX EVENTS_TITLE_KEY ON EVENTS(TITLE);

-- CreateIndex
CREATE UNIQUE INDEX GAME_PARENTPLATFORM_GAMEID_PARENTPLATFORM_ID_KEY ON GAME_PARENTPLATFORM(GAMEID, PARENTPLATFORM_ID);

-- CreateIndex
CREATE INDEX GAME_PARENTPLATFORM_PARENTPLATFORM_ID_KEY ON GAME_PARENTPLATFORM(PARENTPLATFORM_ID);

-- CreateIndex
CREATE UNIQUE INDEX GAME_GENRE_GAMEID_GENRE_ID_KEY ON GAME_GENRE(GAMEID, GENRE_ID);

-- CreateIndex
CREATE INDEX GAME_GENRE_GENRE_ID_KEY ON GAME_GENRE(GENRE_ID);

-- CreateIndex
CREATE UNIQUE INDEX GAME_STORE_GAMEID_STORE_ID_KEY ON GAME_STORE(GAMEID, STORE_ID);

-- CreateIndex
CREATE INDEX GAME_STORE_STORE_ID_KEY ON GAME_STORE(STORE_ID);

-- CreateIndex
CREATE UNIQUE INDEX GAME_TAG_GAMEID_TAG_ID_KEY ON GAME_TAG(GAMEID, TAG_ID);

-- CreateIndex
CREATE INDEX GAME_TAG_TAG_ID_KEY ON GAME_TAG(TAG_ID);

-- CreateIndex
CREATE UNIQUE INDEX ESRBRATING_GAME_ESRBRATING_ID_GAMEID_KEY ON ESRBRATING_GAME(ESRBRATING_ID, GAMEID);

-- CreateIndex
CREATE INDEX ESRBRATING_GAME_GAMEID_KEY ON ESRBRATING_GAME(GAMEID);

-- AddForeignKey
ALTER TABLE GAME ADD CONSTRAINT GAME_PUBLISHERID_FKEY FOREIGN KEY (PUBLISHERID) REFERENCES PUBLISHER(ID) ON DELETE SET NULL;

-- AddForeignKey
ALTER TABLE GAME_RATING ADD CONSTRAINT GAME_RATING_GAMEID_FKEY FOREIGN KEY (GAMEID) REFERENCES GAME(ID);

-- AddForeignKey
ALTER TABLE GAME_RATING ADD CONSTRAINT GAME_RATING_RATINGID_FKEY FOREIGN KEY (RATINGID) REFERENCES RATING_LEVEL(ID);

-- AddForeignKey
ALTER TABLE ADDED_BY_STATUS ADD CONSTRAINT ADDED_BY_STATUS_GAMEID_FKEY FOREIGN KEY (GAMEID) REFERENCES GAME(ID);

-- AddForeignKey
ALTER TABLE PLATFORM_ON_GAMES ADD CONSTRAINT PLATFORM_ON_GAMES_GAMEID_FKEY FOREIGN KEY (GAMEID) REFERENCES GAME(ID);

-- AddForeignKey
ALTER TABLE PLATFORM_ON_GAMES ADD CONSTRAINT PLATFORM_ON_GAMES_PLATFORMID_FKEY FOREIGN KEY (PLATFORMID) REFERENCES PLATFORM(ID);

-- AddForeignKey
ALTER TABLE SHORT_SCREENSHOT ADD CONSTRAINT SHORT_SCREENSHOT_GAMEID_FKEY FOREIGN KEY (GAMEID) REFERENCES GAME(ID);

-- AddForeignKey
ALTER TABLE REVIEWS ADD CONSTRAINT REVIEWS_GAMEID_FKEY FOREIGN KEY (GAMEID) REFERENCES GAME(ID);

-- AddForeignKey
ALTER TABLE REVIEWS ADD CONSTRAINT REVIEWS_PERSONID_FKEY FOREIGN KEY (PERSONID) REFERENCES PERSON(ID);

-- AddForeignKey
ALTER TABLE COLLECTION ADD CONSTRAINT COLLECTION_PERSONID_FKEY FOREIGN KEY (PERSONID) REFERENCES PERSON(ID);

-- AddForeignKey
ALTER TABLE COLLECTION ADD CONSTRAINT COLLECTION_GAMEID_FKEY FOREIGN KEY (GAMEID) REFERENCES GAME(ID);

-- AddForeignKey
ALTER TABLE WISHLIST ADD CONSTRAINT WISHLIST_PERSONID_FKEY FOREIGN KEY (PERSONID) REFERENCES PERSON(ID);

-- AddForeignKey
ALTER TABLE WISHLIST ADD CONSTRAINT WISHLIST_GAMEID_FKEY FOREIGN KEY (GAMEID) REFERENCES GAME(ID);

-- AddForeignKey
ALTER TABLE NEWS ADD CONSTRAINT NEWS_GAMEID_FKEY FOREIGN KEY (GAMEID) REFERENCES GAME(ID);

-- AddForeignKey
ALTER TABLE COMMENTS ADD CONSTRAINT COMMENTS_PERSONID_FKEY FOREIGN KEY (PERSONID) REFERENCES PERSON(ID);

-- AddForeignKey
ALTER TABLE COMMENTS ADD CONSTRAINT COMMENTS_NEWSID_FKEY FOREIGN KEY (NEWSID) REFERENCES NEWS(ID);

-- AddForeignKey
ALTER TABLE EVENTS ADD CONSTRAINT EVENTS_GAMEID_FKEY FOREIGN KEY (GAMEID) REFERENCES GAME(ID);

-- AddForeignKey
ALTER TABLE PARTICIPATION ADD CONSTRAINT PARTICIPATION_PERSONID_FKEY FOREIGN KEY (PERSONID) REFERENCES PERSON(ID);

-- AddForeignKey
ALTER TABLE PARTICIPATION ADD CONSTRAINT PARTICIPATION_EVENTID_FKEY FOREIGN KEY (EVENTID) REFERENCES EVENTS(ID);

-- AddForeignKey
ALTER TABLE GAME_PARENTPLATFORM ADD CONSTRAINT GAME_PARENTPLATFORM_GAMEID_FKEY FOREIGN KEY (GAMEID) REFERENCES GAME(ID) ON DELETE CASCADE;

-- AddForeignKey
ALTER TABLE GAME_PARENTPLATFORM ADD CONSTRAINT GAME_PARENTPLATFORM_PARENTPLATFORM_ID_FKEY FOREIGN KEY (PARENTPLATFORM_ID) REFERENCES PARENT_PLATFORM(ID) ON DELETE CASCADE;

-- AddForeignKey
ALTER TABLE GAME_GENRE ADD CONSTRAINT GAME_GENRE_GAMEID_FKEY FOREIGN KEY (GAMEID) REFERENCES GAME(ID) ON DELETE CASCADE ;

-- AddForeignKey
ALTER TABLE GAME_GENRE ADD CONSTRAINT GAME_GENRE_GENRE_ID_FKEY FOREIGN KEY (GENRE_ID) REFERENCES GENRE(ID) ON DELETE CASCADE ;

-- AddForeignKey
ALTER TABLE GAME_STORE ADD CONSTRAINT GAME_STORE_GAMEID_FKEY FOREIGN KEY (GAMEID) REFERENCES GAME(ID) ON DELETE CASCADE ;

-- AddForeignKey
ALTER TABLE GAME_STORE ADD CONSTRAINT GAME_STORE_STORE_ID_FKEY FOREIGN KEY (STORE_ID) REFERENCES STORE(ID) ON DELETE CASCADE ;

-- AddForeignKey
ALTER TABLE GAME_TAG ADD CONSTRAINT GAME_TAG_GAMEID_FKEY FOREIGN KEY (GAMEID) REFERENCES GAME(ID) ON DELETE CASCADE ;

-- AddForeignKey
ALTER TABLE GAME_TAG ADD CONSTRAINT GAME_TAG_TAG_ID_FKEY FOREIGN KEY (TAG_ID) REFERENCES TAG(ID) ON DELETE CASCADE ;

-- AddForeignKey
ALTER TABLE ESRBRATING_GAME ADD CONSTRAINT ESRBRATING_GAME_ESRBRATING_ID_FKEY FOREIGN KEY (ESRBRATING_ID) REFERENCES ESRB_RATING(ID) ON DELETE CASCADE;

-- AddForeignKey
ALTER TABLE ESRBRATING_GAME ADD CONSTRAINT ESRBRATING_GAME_GAMEID_FKEY FOREIGN KEY (GAMEID) REFERENCES GAME(ID) ON DELETE CASCADE;
